{"version":3,"sources":["api/api.js","pages/home/Home.js","pages/events/Events.js","components/weather/Weather.js","components/performers/Performers.js","components/venue/Venue.js","components/tickets/Tickets.js","components/news/News.js","pages/event/Event.js","App.js","reportWebVitals.js","index.js"],"names":["React","require","axios","default","FetchAllEvents","useState","repo","setRepo","getRepo","a","get","res","statusText","myRepo","data","events","console","log","useEffect","Home","history","useHistory","Container","Panel","className","PanelGroup","map","e","shaded","bordered","bodyFill","onClick","push","id","short_title","Row","Col","xs","md","src","performers","image","alt","height","datetime_local","venue","name","type","address","city","stats","average_price","EventsPage","Weather","props","weather","icon","class","description","temp","wind_spd","wind_cdir_full","rh","clouds","uv","aqi","city_name","country_code","timezone","replaceAll","ob_time","substring","sunrise","sunset","Performers","performersData","i","accordion","defaultActiveKey","header","eventKey","score","Venue","venueData","country","Tickets","ticketsData","url","listing_count","highest_price","lowest_price","href","News","newsData","title","urlToImage","width","source","publishedAt","EventPage","isLoading","setLoading","FetchEvent","useParams","event","news","articles","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23e36a23.chunk.js","sourcesContent":["const React = require(\"react\");\nconst axios = require(\"axios\").default;\n\n// fetch all events data\nexport function FetchAllEvents() {\n  const [repo, setRepo] = React.useState([]);\n  const url = `/eventsAPI`;\n\n  const getRepo = async () => {\n    try {\n      const res = await axios.get(url);\n      if (res.statusText === \"OK\") {\n        // console.log(res.data);\n        const myRepo = res.data.events;\n        setRepo(myRepo);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  React.useEffect(() => {\n    getRepo();\n  }, []);\n  if (repo !== []) {\n    return repo;\n  }\n}\n\n//fetch one event info and weather info\nexport function FetchEvent(id) {\n  const [isLoading, setLoading] = React.useState(true);\n  const [repo, setRepo] = React.useState([]);\n  const url = `/eventAPI/${id}`;\n\n  const getRepo = async () => {\n    try {\n      const res = await axios.get(url);\n      if (res.statusText === \"OK\") {\n        const myRepo = res.data;\n        console.log(myRepo);\n        setRepo(myRepo);\n        setLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  React.useEffect(() => {\n    getRepo();\n  }, []);\n\n  return { repo, isLoading };\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Panel, PanelGroup } from \"rsuite\";\nimport \"./Home.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { FetchAllEvents } from \"../../api/api\";\n\n//Home page\nexport default function Home() {\n  //fetching data\n  const data = FetchAllEvents();\n\n  const history = useHistory();\n  return (\n    <Container>\n      <Panel className=\"pn\">\n        <Panel className=\"pn-header\">\n          <h1>Eventy</h1>\n          <p>\n            This is a website giving users finding their events in around the\n            world.\n          </p>\n          <p>\n            We provide a quick information of the event including weather,\n            tickets' price and news about the events.\n          </p>\n        </Panel>\n      </Panel>\n      <PanelGroup>\n        {data.map((e) => {\n          return (\n            <Panel\n              shaded\n              bordered\n              bodyFill\n              onClick={() => history.push(`/events/${e.id}`)}\n              className=\"rs-panel-hoverable\"\n            >\n              <h2>{e.short_title}</h2>\n              <Row>\n                <Col xs={6} md={4}>\n                  <img src={e.performers[0].image} alt=\"\" height=\"240\" />\n                </Col>\n                <Col xs={6} md={8}>\n                  <p>Time: {e.datetime_local}</p>\n                  <p>Venue: {e.venue.name}</p>\n                  <p>Type: {e.type}</p>\n                  <p>Address: {e.venue.address}</p>\n                  <p>City: {e.venue.city}</p>\n                  <p>Average Ticket Price: ${e.stats.average_price}</p>\n                </Col>\n              </Row>\n            </Panel>\n          );\n        })}\n      </PanelGroup>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FetchAllEvents } from \"../../api/api\";\nimport { Panel, PanelGroup } from \"rsuite\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./Events.css\";\n\n// Displayng 25 events\nexport default function EventsPage() {\n  //fetching data\n  const data = FetchAllEvents();\n\n  const history = useHistory();\n\n  return (\n    <Container>\n      <PanelGroup>\n        {data.map((e) => {\n          return (\n            <Panel\n              shaded\n              bordered\n              bodyFill\n              onClick={() => history.push(`/events/${e.id}`)}\n              className=\"rs-panel-hoverable\"\n            >\n              <h2>{e.short_title}</h2>\n              <Row>\n                <Col xs={6} md={4}>\n                  <img src={e.performers[0].image} alt=\"\" height=\"240\" />\n                </Col>\n                <Col xs={6} md={8}>\n                  <p>Time: {e.datetime_local}</p>\n                  <p>Venue: {e.venue.name}</p>\n                  <p>Type: {e.type}</p>\n                  <p>Address: {e.venue.address}</p>\n                  <p>City: {e.venue.city}</p>\n                  <p>Average Ticket Price: ${e.stats.average_price}</p>\n                </Col>\n              </Row>\n            </Panel>\n          );\n        })}\n      </PanelGroup>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  //weathers' data and address of the venue\n  const { data, address } = props;\n\n  //displaying the weather\n  return (\n    <Container className=\"weather-info\">\n      <Row>\n        <Col xs={6} md={4}>\n          <Row xs={1}>\n            <Col className=\"weather-icon-parent\">\n              <img\n                className=\"weather-icon\"\n                alt=\"Weather Icon\"\n                src={`https://www.weatherbit.io/static/img/icons/${data.weather.icon}.png`}\n              />\n            </Col>\n            <Col>\n              <h2 class=\"description\">{`${data.weather.description}`}</h2>\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={6} md={4}>\n          <h3>Temperature: {data.temp} °C</h3>\n          <h5>Wind Speed: {data.wind_spd} m/s</h5>\n          <h5>Wind Direction: {data.wind_cdir_full}</h5>\n          <h5>Humidity: {data.rh}%</h5>\n          <h5>Clouds Coverage: {data.clouds}%</h5>\n          <h5>UV Index: {data.uv}</h5>\n          <h5>Air Quality Index: {data.aqi}</h5>\n        </Col>\n        <Col xs={6} md={4} className=\"additional-info\">\n          <h3 className=\"address\">{address}</h3>\n          <h5>City: {data.city_name}</h5>\n          <h5 className=\"additional-padding\">Country: {data.country_code}</h5>\n          <h3>Timezone: {data.timezone.replaceAll(\"_\", \" \")}</h3>\n          <h5>Data last fetched on: {data.ob_time.substring(0, 10)}</h5>\n          <h5>Sunrise at {data.sunrise}</h5>\n          <h5>Sunset at {data.sunset}</h5>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import { Row, Col } from \"react-bootstrap\";\nimport { Panel, PanelGroup } from \"rsuite\";\n\n//performers panel\nexport default function Performers(props) {\n  //performers' data\n  const { performersData } = props;\n\n  //panel group\n  let i = 0;\n  return (\n    <PanelGroup accordion defaultActiveKey={1} bordered>\n      {performersData.map((e) => {\n        i++;\n        return (\n          <Panel header={e.name} shaded bordered eventKey={i}>\n            <h2>{e.name}</h2>\n            <Row>\n              <Col xs={6} md={4}>\n                <img src={e.image} alt=\"\" height=\"240\" />\n              </Col>\n              <Col xs={6} md={8}>\n                <p>Type: {e.type.replaceAll(\"_\", \" \")}</p>\n                <p>Score: {e.score}</p>\n              </Col>\n            </Row>\n          </Panel>\n        );\n      })}\n    </PanelGroup>\n  );\n}\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { Panel } from \"rsuite\";\n\nexport default function Venue(props) {\n  //venue data\n  const { venueData } = props;\n\n  //panel group\n  return (\n    <Container>\n      <Panel>\n        <Row>\n          <Col xs={6} md={4}>\n            <img\n              src={venueData.performers[0].image}\n              alt=\"One Event\"\n              height=\"240\"\n            />\n          </Col>\n          <Col xs={6} md={8}>\n            <p>Time: {venueData.datetime_local}</p>\n            <p>Venue: {venueData.venue.name}</p>\n            <p>Type: {venueData.type.replaceAll(\"_\", \" \")}</p>\n            <p>Address: {venueData.venue.address}</p>\n            <p>City: {venueData.venue.city}</p>\n            <p>Country: {venueData.venue.country}</p>\n          </Col>\n        </Row>\n      </Panel>\n    </Container>\n  );\n}\n","import { Container } from \"react-bootstrap\";\n\nexport default function Tickets(props) {\n  //tickets' data\n  const { ticketsData, url } = props;\n\n  //Tickets info\n  return (\n    <Container>\n      <p>Tickets Count: {ticketsData.listing_count}</p>\n      <p>Average price: ${ticketsData.average_price}</p>\n      <p>Highest price: ${ticketsData.highest_price}</p>\n      <p>Lowest price: ${ticketsData.lowest_price}</p>\n      <p>\n        Order At: <a href={url}>{url}</a>\n      </p>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { PanelGroup, Panel } from \"rsuite\";\nimport \"./News.css\";\n\n//news panel\nexport default function News(props) {\n  //news' data\n  const { newsData } = props;\n\n  //news group\n  return (\n    <Container>\n      <PanelGroup>\n        {newsData.map((e) => {\n          return (\n            <Panel shaded bordered bodyFill className=\"news\">\n              <h3>{e.title}</h3>\n              <Row>\n                <Col xs={6} md={4}>\n                  <img src={e.urlToImage} alt=\"\" height=\"240\" width=\"100%\" />\n                </Col>\n                <Col xs={6} md={8}>\n                  <p>Source: {e.source.name}</p>\n                  <p>Description: {e.description}</p>\n                  <p>Plublished At: {e.publishedAt}</p>\n                  <p>\n                    Link: <a href={e.url}>{e.url}</a>\n                  </p>\n                </Col>\n              </Row>\n            </Panel>\n          );\n        })}\n      </PanelGroup>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FetchEvent } from \"../../api/api\";\n\nimport \"./Event.css\";\nimport Weather from \"../../components/weather/Weather\";\nimport Performers from \"../../components/performers/Performers\";\nimport Venue from \"../../components/venue/Venue\";\nimport Tickets from \"../../components/tickets/Tickets\";\nimport News from \"../../components/news/News\";\n\n// One event Page\nexport default function EventPage() {\n  const { id } = useParams();\n\n  //fetching data\n  const { repo, isLoading } = FetchEvent(id);\n\n  // if loading\n  if (isLoading) {\n    return (\n      <div class=\"parent-loader\">\n        <div class=\"loader\">\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n    );\n  }\n  //loading complete\n  else {\n    return (\n      <Container>\n        {/* Title */}\n        <h1>{repo.event.title}</h1>\n\n        {/* Venue */}\n        <h2> Venue Information </h2>\n        <h2>{repo.short_title}</h2>\n        <Venue venueData={repo.event} />\n\n        {/* Performers */}\n        <h2>Performers Info</h2>\n        <Performers performersData={repo.event.performers} />\n\n        {/* Tickets */}\n        <h2>Tickets Info </h2>\n        <Tickets ticketsData={repo.event.stats} url={repo.event.url} />\n\n        {/* Weather */}\n        <h2>Weather</h2>\n        <Weather\n          data={repo.weather.data[0]}\n          address={repo.event.venue.address}\n        />\n\n        {/* News */}\n        <h2>News About The Venue or Performers</h2>\n        <News newsData={repo.news.articles} />\n      </Container>\n    );\n  }\n}\n","import \"./App.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navbar, Container, Nav, Row } from \"react-bootstrap\";\nimport Home from \"./pages/home/Home\";\nimport EventsPage from \"./pages/events/Events\";\nimport EventPage from \"./pages/event/Event\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* Navbar */}\n        {/* <Navbar bg=\"dark\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand href=\"/\">Eventy</Navbar.Brand>\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/events\">Events</Nav.Link>\n            </Nav>\n          </Container>\n        </Navbar> */}\n\n        {/* Switch*/}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/events/:id\" component={EventPage} />\n          <Route path=\"/events\" component={EventsPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}